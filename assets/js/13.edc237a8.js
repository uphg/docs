(window.webpackJsonp=window.webpackJsonp||[]).push([[13],{407:function(t,e,s){},448:function(t,e,s){"use strict";s(407)},554:function(t,e,s){"use strict";s.r(e);s(448);var a=s(31),_=Object(a.a)({},(function(){var t=this,e=t.$createElement,s=t._self._c||e;return s("ContentSlotsDistributor",{attrs:{"slot-key":t.$parent.slotKey}},[s("h2",{attrs:{id:"api-文档"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#api-文档"}},[t._v("#")]),t._v(" API 文档")]),t._v(" "),s("ul",[s("li",[t._v("官方地址："),s("a",{attrs:{href:"http://nodejs.cn/api/",target:"_blank",rel:"noopener noreferrer"}},[t._v("中文文档"),s("OutboundLink")],1),t._v("/"),s("a",{attrs:{href:"https://nodejs.org/api/",target:"_blank",rel:"noopener noreferrer"}},[t._v("英文文档"),s("OutboundLink")],1)]),t._v(" "),s("li",[s("a",{attrs:{href:"https://devdocs.io/",target:"_blank",rel:"noopener noreferrer"}},[t._v("devdocs.io"),s("OutboundLink")],1),t._v(" 搜索功能便捷，支持夜间模式，并且可以离线观看")])]),t._v(" "),s("h2",{attrs:{id:"node-js-是什么"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#node-js-是什么"}},[t._v("#")]),t._v(" Node.js 是什么")]),t._v(" "),s("ul",[s("li",[s("p",[s("strong",[t._v("是一个平台")])]),t._v(" "),s("ul",[s("li",[t._v("让多种技术组合起来")]),t._v(" "),s("li",[t._v("让 JavaScript 也能调用系统接口、开发后端应用")])])]),t._v(" "),s("li",[s("p",[s("strong",[t._v("Node.js 用到了哪些技术")])]),t._v(" "),s("ul",[s("li",[t._v("V8引擎")]),t._v(" "),s("li",[t._v("libuv")]),t._v(" "),s("li",[t._v("C/C++ 实现的 c-ares、http-parser、OpenSSL、zlib 等库")])])])]),t._v(" "),s("h2",{attrs:{id:"node-js-不是什么"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#node-js-不是什么"}},[t._v("#")]),t._v(" Node.js 不是什么")]),t._v(" "),s("ul",[s("li",[s("p",[s("strong",[t._v("不是 web 框架")])]),t._v(" "),s("ul",[s("li",[t._v("Node.js 并不是 web 后端框架")]),t._v(" "),s("li",[t._v("所以你不能把 Node.js 与 Flask 或 Spring 对比")])])]),t._v(" "),s("li",[s("p",[s("strong",[t._v("不是编程语言")])]),t._v(" "),s("ul",[s("li",[t._v("Node.js 并不是后端的 JS")]),t._v(" "),s("li",[t._v("所以你不能把 Node.js 与 Python 或 PHP 对比")])])])]),t._v(" "),s("h2",{attrs:{id:"node-js-技术架构"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#node-js-技术架构"}},[t._v("#")]),t._v(" Node.js 技术架构")]),t._v(" "),s("div",{staticClass:"flexible-container"},[s("ul",{staticClass:"flexible-table"},[s("li",[s("p",{staticClass:"flexible-table__title"},[s("b",[t._v("Node.js API")])]),t._v(" "),s("p",[t._v("http 模块、fs 模块、stream 模块")])])]),t._v(" "),s("ul",{staticClass:"flexible-table"},[s("li",[s("p",{staticClass:"flexible-table__title"},[s("b",[t._v("Node.js bindings")])]),t._v(" "),s("p",[t._v("让 JS 和 C/C++ 通信")])]),t._v(" "),s("li",[s("p",{staticClass:"flexible-table__title"},[s("b",[t._v("C/C++ 插件")])]),t._v(" "),s("p",[t._v("自定义其他能力")])])]),t._v(" "),s("ul",{staticClass:"flexible-table"},[s("li",[s("p",[t._v("JS 引擎")]),t._v(" "),s("p",[t._v("V8")])]),t._v(" "),s("li",[s("p",[t._v("跨平台异步I/O能力")]),t._v(" "),s("p",[t._v("libuv")])]),t._v(" "),s("li",[s("p",[t._v("DNS 解析")]),t._v(" "),s("p",[t._v("c-ares")])]),t._v(" "),s("li",[s("p",[t._v("加密解密")]),t._v(" "),s("p",[t._v("OpenSSL")])]),t._v(" "),s("li",[s("p",[t._v("其他...")]),t._v(" "),s("p",[t._v("http_parser、zlib")])])])]),t._v(" "),s("p",[t._v("随着 Node.js 的版本已经从 0.8 升级到 12.11.1，其架构也在一直变化中。如果你想看源码，推荐看 "),s("a",{attrs:{href:"https://github.com/nodejs/node/tree/v0.10.0",target:"_blank",rel:"noopener noreferrer"}},[t._v("Node.js v0.10.0"),s("OutboundLink")],1),t._v(" 版本，因为这个版本使用了很久，而且源码相对最新版较少。")]),t._v(" "),s("p",[t._v("如果想要了解更多，可以看 "),s("a",{attrs:{href:"https://github.com/yjhjstz/deep-into-node",target:"_blank",rel:"noopener noreferrer"}},[t._v("深入理解Node.js：核心思想与源码分析"),s("OutboundLink")],1)]),t._v(" "),s("h2",{attrs:{id:"什么是-bindings"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#什么是-bindings"}},[t._v("#")]),t._v(" 什么是 bindings")]),t._v(" "),s("h3",{attrs:{id:"背景"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#背景"}},[t._v("#")]),t._v(" 背景")]),t._v(" "),s("ul",[s("li",[t._v("C/C++ 实现了一个 http_parser 库， 很高效")]),t._v(" "),s("li",[t._v("你只会写 JS，但想使用这个库")]),t._v(" "),s("li",[t._v("直接调用肯定不会成功，于是就需要一个中间的桥梁")])]),t._v(" "),s("h3",{attrs:{id:"bindings"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#bindings"}},[t._v("#")]),t._v(" bindings")]),t._v(" "),s("ul",[s("li",[t._v("Node.js 用 C++ 对 "),s("code",[t._v("http_parser")]),t._v(" 进行封装，使它符合某些要求，封装的文件名就叫做 "),s("code",[t._v("http_parser_bindings.cpp")])]),t._v(" "),s("li",[t._v("用 Node.js 提供的编译工具将其编译为 "),s("code",[t._v(".node")]),t._v(" 文件，JS 代码就可以直接 require 这个 "),s("code",[t._v(".node")]),t._v(" 文件")]),t._v(" "),s("li",[t._v("这样 JS 就能调用 C++ 库，中间的桥梁就是 binding")]),t._v(" "),s("li",[t._v("由于 Node.js 提供了很多 binding，所以要加个 s，这就是 "),s("strong",[s("code",[t._v("bindings")])]),t._v(" 的由来")])]),t._v(" "),s("h2",{attrs:{id:"js-与-c-交互案例"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#js-与-c-交互案例"}},[t._v("#")]),t._v(" JS 与 C++ 交互案例")]),t._v(" "),s("ul",[s("li",[t._v("JS 调用 C++ 代码："),s("a",{attrs:{href:"http://nodejs.cn/api/addons.html#addons_function_arguments",target:"_blank",rel:"noopener noreferrer"}},[t._v("官方示例"),s("OutboundLink")],1)]),t._v(" "),s("li",[t._v("C++ 调用 JS 代码："),s("a",{attrs:{href:"http://nodejs.cn/api/addons.html#addons_callbacks",target:"_blank",rel:"noopener noreferrer"}},[t._v("官方示例"),s("OutboundLink")],1)])]),t._v(" "),s("h2",{attrs:{id:"什么是-eventloop"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#什么是-eventloop"}},[t._v("#")]),t._v(" 什么是 EventLoop")]),t._v(" "),s("p",[s("strong",[t._v("Event 表示事件")]),t._v("，如：")]),t._v(" "),s("ul",[s("li",[t._v("计时器到期，要执行一个事件")]),t._v(" "),s("li",[t._v("文件读取完毕或出错，要执行一个事件")]),t._v(" "),s("li",[t._v("socket 有内容了，关闭了，要执行一个事件")])]),t._v(" "),s("p",[s("strong",[t._v("Loop 就是循环")]),t._v("，如：")]),t._v(" "),s("ul",[s("li",[t._v("wihile(true) 循环（死循环）")]),t._v(" "),s("li",[t._v("Node.js 需要按照顺序轮询每种事件，这种事件往往都是循环，所以叫 loop")])]),t._v(" "),s("p",[s("strong",[t._v("EventLoop")])]),t._v(" "),s("ul",[s("li",[t._v("操作系统触发事件，JS 处理事件，EventLoop 就是对事件处理顺序的管理")]),t._v(" "),s("li",[t._v("通常 EventLoop 会停留在 poll 阶段，不停的问操作系统，接下来有没有事情做")])]),t._v(" "),s("p",[t._v("执行顺序图示")]),t._v(" "),s("img",{staticStyle:{width:"500px"},attrs:{src:t.$withBase("/images/eventloop-process.jpg"),alt:"foo"}}),t._v(" "),s("h2",{attrs:{id:"node-js-工作流程"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#node-js-工作流程"}},[t._v("#")]),t._v(" Node.js 工作流程")]),t._v(" "),s("img",{attrs:{src:t.$withBase("/images/nodejs-process.jpg"),alt:"foo"}}),t._v(" "),s("h2",{attrs:{id:"面试题"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#面试题"}},[t._v("#")]),t._v(" 面试题")]),t._v(" "),s("h3",{attrs:{id:"_1-下面的代码中-那个函数先执行"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_1-下面的代码中-那个函数先执行"}},[t._v("#")]),t._v(" 1. 下面的代码中，那个函数先执行")]),t._v(" "),s("div",{staticClass:"language-js extra-class"},[s("pre",{pre:!0,attrs:{class:"language-js"}},[s("code",[s("span",{pre:!0,attrs:{class:"token function"}},[t._v("setTimeout")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("f1"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("0")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("setImmediate")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("f2"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n")])])]),s("p",[t._v("一般情况下都是 "),s("code",[t._v("setImmediate(f2)")]),t._v(" 先执行，因为它处在 check 阶段，只有在 Node.js 第一次运行时，会先进入 timers 阶段")]),t._v(" "),s("p",[t._v("end 。。。")])])}),[],!1,null,null,null);e.default=_.exports}}]);