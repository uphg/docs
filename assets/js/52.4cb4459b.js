(window.webpackJsonp=window.webpackJsonp||[]).push([[52],{506:function(t,s,a){"use strict";a.r(s);var n=a(31),e=Object(n.a)({},(function(){var t=this,s=t.$createElement,a=t._self._c||s;return a("ContentSlotsDistributor",{attrs:{"slot-key":t.$parent.slotKey}},[a("h2",{attrs:{id:"原理"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#原理"}},[t._v("#")]),t._v(" 原理")]),t._v(" "),a("p",[t._v("JS 引擎是不能直接操作页面的，只能操作 JS，而渲染引擎又不能直接操作 JS，只能操作页面。JS 是想要通过 "),a("code",[t._v("document.body.appendChild(div)")]),t._v(" 操作页面，就需要浏览器帮助，当浏览器发现 JS 在 body 中添加了一个 div，就会通知渲染引擎，新增一个与 JS 中 div 属性一模一样的 div。这就叫做"),a("strong",[t._v("跨线程通信")]),t._v("。")]),t._v(" "),a("p",[t._v("简单来说就是JS虽然不能直接操作页面，但是浏览器会帮你渲染页面。")]),t._v(" "),a("h2",{attrs:{id:"插入一个标签的完整过程"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#插入一个标签的完整过程"}},[t._v("#")]),t._v(" 插入一个标签的完整过程")]),t._v(" "),a("ol",[a("li",[a("p",[t._v("元素放入页面之前")]),t._v(" "),a("ul",[a("li",[t._v("你对元素所有操作都在 JS 线程中。")])])]),t._v(" "),a("li",[a("p",[t._v("元素放入页面时")]),t._v(" "),a("ul",[a("li",[t._v("浏览器发现JS的意图，通知渲染引擎在页面中渲染对应的元素。")])])]),t._v(" "),a("li",[a("p",[t._v("元素放入页面之后")]),t._v(" "),a("ul",[a("li",[t._v("你对元素的任何操作都有可能触发重新渲染。")])])])]),t._v(" "),a("h2",{attrs:{id:"可能会触发重新渲染的操作"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#可能会触发重新渲染的操作"}},[t._v("#")]),t._v(" 可能会触发重新渲染的操作")]),t._v(" "),a("p",[t._v("由于浏览器对页面的重新渲染会很耗费内存，所以浏览器会想尽办法减少重新渲染的次数，在某些不必要的情况下并不会进行重新渲染。或者会尽量合并多次的 JS 操作进行重新渲染，以此减少重新渲染的次数。")]),t._v(" "),a("p",[a("strong",[t._v("1. 通过修改 "),a("code",[t._v("id")]),t._v(" 属性触发重新渲染")])]),t._v(" "),a("p",[t._v("比如一个获取到一个 div，修改它的 "),a("code",[t._v("div.id = 'newId'")]),t._v("。此时如果 newId 附带样式等操作，就会触发重新渲染，如果只是id，可能不会触发。")]),t._v(" "),a("p",[a("strong",[t._v("2. 通过修改 "),a("code",[t._v("title")]),t._v(" 属性触发重新渲染")])]),t._v(" "),a("p",[t._v("假如有如下样式的 div")]),t._v(" "),a("div",{staticClass:"language-html extra-class"},[a("pre",{pre:!0,attrs:{class:"language-html"}},[a("code",[a("span",{pre:!0,attrs:{class:"token tag"}},[a("span",{pre:!0,attrs:{class:"token tag"}},[a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("<")]),t._v("div")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token attr-name"}},[t._v("id")]),a("span",{pre:!0,attrs:{class:"token attr-value"}},[a("span",{pre:!0,attrs:{class:"token punctuation attr-equals"}},[t._v("=")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v('"')]),t._v("div"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v('"')])]),t._v(" "),a("span",{pre:!0,attrs:{class:"token attr-name"}},[t._v("title")]),a("span",{pre:!0,attrs:{class:"token attr-value"}},[a("span",{pre:!0,attrs:{class:"token punctuation attr-equals"}},[t._v("=")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v('"')]),t._v("titleHi"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v('"')])]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(">")])]),a("span",{pre:!0,attrs:{class:"token tag"}},[a("span",{pre:!0,attrs:{class:"token tag"}},[a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("</")]),t._v("div")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(">")])]),t._v("\n")])])]),a("div",{staticClass:"language-css extra-class"},[a("pre",{pre:!0,attrs:{class:"language-css"}},[a("code",[a("span",{pre:!0,attrs:{class:"token selector"}},[t._v("div::after")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token property"}},[t._v("content")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("attr")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("title"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n")])])]),a("p",[t._v("运行以下代码")]),t._v(" "),a("div",{staticClass:"language-js extra-class"},[a("pre",{pre:!0,attrs:{class:"language-js"}},[a("code",[t._v("div"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("title "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v("'newId'")]),t._v("\n")])])]),a("div",{staticClass:"custom-block info"},[a("p",{staticClass:"custom-block-title"},[t._v("原理")]),a("p",[t._v("当它的 "),a("code",[t._v("title")]),t._v(" 被修改时，由于 after 伪元素需要通过它的 "),a("code",[t._v("title")]),t._v(" 属性来渲染，所以会触发浏览器的重新渲染。")])]),a("p",[a("strong",[t._v("3. 通过获取宽度触发重新渲染")])]),t._v(" "),a("p",[t._v("假如有如下样式的 div")]),t._v(" "),a("div",{staticClass:"language-html extra-class"},[a("pre",{pre:!0,attrs:{class:"language-html"}},[a("code",[a("span",{pre:!0,attrs:{class:"token tag"}},[a("span",{pre:!0,attrs:{class:"token tag"}},[a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("<")]),t._v("div")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token attr-name"}},[t._v("id")]),a("span",{pre:!0,attrs:{class:"token attr-value"}},[a("span",{pre:!0,attrs:{class:"token punctuation attr-equals"}},[t._v("=")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v('"')]),t._v("test"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v('"')])]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(">")])]),a("span",{pre:!0,attrs:{class:"token tag"}},[a("span",{pre:!0,attrs:{class:"token tag"}},[a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("</")]),t._v("div")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(">")])]),t._v("\n")])])]),a("div",{staticClass:"language-css extra-class"},[a("pre",{pre:!0,attrs:{class:"language-css"}},[a("code",[a("span",{pre:!0,attrs:{class:"token selector"}},[t._v(".start")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token property"}},[t._v("border")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" 1px solid red"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token property"}},[t._v("width")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" 100px"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token property"}},[t._v("height")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" 100px"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token property"}},[t._v("transition")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" width 1s"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n\n"),a("span",{pre:!0,attrs:{class:"token selector"}},[t._v(".end")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token property"}},[t._v("width")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" 200px"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n")])])]),a("p",[t._v("运行如下代码")]),t._v(" "),a("div",{staticClass:"language-js extra-class"},[a("pre",{pre:!0,attrs:{class:"language-js"}},[a("code",[t._v("test"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("classList"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("add")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token string"}},[t._v("'start'")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\ntest"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("clientWidth             "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 这句话看似无用，实际会触发重新渲染")]),t._v("\ntest"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("classList"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("add")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token string"}},[t._v("'end'")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n")])])]),a("p",[t._v("案例链接："),a("a",{attrs:{href:"http://js.jirengu.com/yefac/1/edit?html,css,js,output",target:"_blank",rel:"noopener noreferrer"}},[t._v("http://js.jirengu.com/yefac/1/edit?html,css,js,output"),a("OutboundLink")],1)]),t._v(" "),a("div",{staticClass:"custom-block info"},[a("p",{staticClass:"custom-block-title"},[t._v("原理")]),a("p",[t._v("当你连续对同一个 div 做多次操作时，浏览器可能会合并为一次操作，在某些情况下，会导致动画的效果无法展现。这时可以获取一下元素的宽度，让浏览器不得不触发重新渲染（因为在获取宽度时必须要知道当前元素真正的宽度，也就是把它放进浏览器窗口中）。")])]),a("h2",{attrs:{id:"属性同步"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#属性同步"}},[t._v("#")]),t._v(" 属性同步")]),t._v(" "),a("ol",[a("li",[t._v("一个元素默认的标准属性被修改时，会自动同步至浏览器，比如 "),a("code",[t._v("id")]),t._v("、"),a("code",[t._v("className")]),t._v("、"),a("code",[t._v("title")]),t._v(" 等。")]),t._v(" "),a("li",[t._v("带有 "),a("code",[t._v("data-")]),t._v(" 的属性原理同上。")]),t._v(" "),a("li",[t._v("如果给元素随便赋值一个非标准属性，如 "),a("code",[t._v('x="1"')]),t._v(" 则对该元素的属性修改只会停留在 JS 中，并不会同步到页面。")])]),t._v(" "),a("div",{staticClass:"custom-block info"},[a("p",{staticClass:"custom-block-title"},[t._v("结论")]),a("p",[t._v("如果需要自定义一个属性，并希望它在修改时可以被浏览器同步到页面，就使用 "),a("code",[t._v("data-")]),t._v(" 作为前缀。")])])])}),[],!1,null,null,null);s.default=e.exports}}]);